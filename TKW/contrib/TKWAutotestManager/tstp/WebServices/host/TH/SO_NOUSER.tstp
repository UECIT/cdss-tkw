SCRIPT SO_NOUSER
# $Id: Generic_Fault_skel.tst 87 2016-05-06 09:58:33Z sfarrow $
# Sections 1 & 2 Negative Tests Test Script File
# Automatically generated from Generic_Fault_skel.tst 

VALIDATOR __TKWROOT__/config/ITK_Telehealth/validator_config/validator.conf

SIMULATOR __SIMULATOR__

STOP WHEN COMPLETE

BEGIN SCHEDULES
SO_NOUSER TESTS SO_NOUSER_test1 SO_NOUSER_test2 SO_NOUSER_test3 SO_NOUSER_test4 SO_NOUSER_test5 SO_NOUSER_test6 SO_NOUSER_test7 SO_NOUSER_test8
END SCHEDULES

BEGIN TESTS
SO_NOUSER_test1 SEND_TKW SO_NOUSER TO __TO_URL__ FROM __FROM_URL__/__FROM_CONTEXT_PATH__ __REPLY_TO_SECTION__ PRETRANSFORM __TKWROOT__/contrib/TKWAutotestManager/transforms/SO_NOUSER.xslt APPLYPRETRANSFORMTO data SYNC fail WITH_PROPERTYSET base+webservices+nosigning
SO_NOUSER_test2 CHAIN SYNC errorcodeexists
SO_NOUSER_test3 CHAIN SYNC error_1000or3000
SO_NOUSER_test4 CHAIN SYNC messageidexists
SO_NOUSER_test5 CHAIN SYNC syncmessageidsok 
SO_NOUSER_test6 CHAIN SYNC actionok
SO_NOUSER_test7 CHAIN SYNC faultcodeok
#SO_NOUSER_test8 CHAIN SYNC faultstringok
SO_NOUSER_test8 CHAIN SYNC errortextcheck
END TESTS

BEGIN MESSAGES
SO_NOUSER USING SO_NOUSER___HAPPY_PATH_SERVICE___template WITH NULL SOAPACTION __HAPPY_PATH_SERVICE__
END MESSAGES

BEGIN TEMPLATES
SO_NOUSER___HAPPY_PATH_SERVICE___template  __TKWROOT__/contrib/ITK_2_01_Test_Messages/__HAPPY_PATH_MSG__
END TEMPLATES

BEGIN PROPERTYSETS
breakusername
	SET tks.signer.break.usernametoken Y 
invaliduser
	SET tks.signer.keyalias tks_client
breaksignature
	SET tks.signer.break.signaturevalue Y
nosigning
	SET tks.transmitter.includesigner N
increasetimeout
	SET tks.autotest.synchronous.log.delay 30000
webservices
	SET tks.HttpTransport.listenport __LISTEN_PORT_NUMBER__
	SET tks.HttpTransport.listenaddr  __LISTEN_ADDR__
END PROPERTYSETS

BEGIN PASSFAIL
fail http500
errorcodeexists synchronousxpath /soap:Envelope/soap:Body/soap:Fault/detail/itk:ToolkitErrorInfo/itk:ErrorCode exists
error_1000 synchronousxpath /soap:Envelope/soap:Body/soap:Fault/detail/itk:ToolkitErrorInfo/itk:ErrorCode/text() matches "^1000$"
error_1000or3000 synchronousxpath /soap:Envelope/soap:Body/soap:Fault/detail/itk:ToolkitErrorInfo/itk:ErrorCode/text() matches "^(1000|3000)$"
error_2200 synchronousxpath /soap:Envelope/soap:Body/soap:Fault/detail/itk:ToolkitErrorInfo/itk:ErrorCode/text() matches "^(1000|2200)$"
error_3000 synchronousxpath /soap:Envelope/soap:Body/soap:Fault/detail/itk:ToolkitErrorInfo/itk:ErrorCode/text() matches "^3000$"
messageidexists synchronousxpath /soap:Envelope/soap:Header/wsa:MessageID exists
syncmessageidsok syncmessageidsdiffer
actionok synchronousxpath /soap:Envelope/soap:Header/wsa:Action matches "^http://www.w3.org.2005/08/addressing/soap/fault$"
faultcodeok synchronousxpath /soap:Envelope/soap:Body/soap:Fault/faultcode matches "^(.+:)?Client$"
faultstringok synchronousxpath /soap:Envelope/soap:Body/soap:Fault/faultstring matches ".+"
errortextcheck synchronousxpath /soap:Envelope/soap:Body/soap:Fault/detail/itk:ToolkitErrorInfo/itk:ErrorText check
END PASSFAIL
